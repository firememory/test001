var g_DatePickers = []; $.fn.datepicker = function (a) { var b = arguments; return $(this).each(function () { var c = $(this), d = { option: function () { return "object" == typeof a ? $.extend({}, $.fn.datepicker.defaults, a) : {} }(), init: function () { this._target = c, this._picker = function () { var a = []; return a.push('<div class="picker picker--focused picker--opened">'), a.push('	<div class="picker__holder">'), a.push('		<div class="picker__frame">'), a.push('			<div class="picker__wrap">'), a.push('				<div class="picker__box">'), a.push('					<div class="picker__header">'), a.push('						<div class="picker__title"></div>'), a.push('						<div class="picker__nav--prev" title="Previous month"> </div>'), a.push('						<div class="picker__nav--next" title="Next month"> </div>'), a.push("					</div>"), a.push('					<table class="picker__table">'), a.push("						<thead>"), a.push("							<tr>"), a.push('								<th class="picker__weekday" scope="col" title="Monday">一</th>'), a.push('								<th class="picker__weekday" scope="col" title="Tuesday">二</th>'), a.push('								<th class="picker__weekday" scope="col" title="Wednesday">三</th>'), a.push('								<th class="picker__weekday" scope="col" title="Thursday">四</th>'), a.push('								<th class="picker__weekday" scope="col" title="Friday">五</th>'), a.push('								<th class="picker__weekday" scope="col" title="Saturday">六</th>'), a.push('								<th class="picker__weekday" scope="col" title="Sunday">日</th>'), a.push("							</tr>"), a.push("						</thead>"), a.push("						<tbody>"), a.push("						</tbody>"), a.push("					</table>"), a.push('					<div class="picker__footer">'), a.push('						<button class="picker__button--today" type="button">今天</button>'), a.push('						<button class="picker__button--clear" type="button">清除</button>'), a.push("					</div>"), a.push("				</div>"), a.push("			</div>"), a.push("		</div>"), a.push("	</div>"), $(a.join("")) }(); var a = this; return this._picker.find(".picker__nav--prev,.picker__nav--next").on("touchstart", function () { $(this).addClass("hover") }).on("touchend", function () { $(this).removeClass("hover") }).click(function () { $(this).hasClass("picker__nav--prev") ? a._date.setMonth(a._date.getMonth() - 1) : a._date.setMonth(a._date.getMonth() + 1), a._renderDays() }), this._picker.find(".picker__button--clear").click(function () { a._fillDate(""), a.hide(), "function" == typeof a.option.onSelect && a.option.onSelect(null) }), this._picker.find(".picker__button--today").click(function () { a._fillDate(new Date), a.hide(), "function" == typeof a.option.onSelect && a.option.onSelect(new Date) }), this._picker.click(function (a) { a.preventDefault(), a.stopPropagation() }), $(document).click(function (b) { b.target != a._picker[0] && b.target != a._target[0] && a.hide() }), this._picker.appendTo($("body")).hide(), this }, show: function () { this._picker.removeClass("hide").addClass("show"), this._picker.show() }, hide: function () { var a = this; this._picker.removeClass("show").addClass("hide"), setTimeout(function () { a._picker.hide() }, 500) }, _renderDays: function () { var g, h, i, j, k, l, a = this._date.getFullYear(), b = this._date.getMonth() + 1, c = this._date.getDate(), d = new Date(new Date(a, b, 1) - 864e5).getDate(), e = new Date, f = function () { var c = new Date(a, b - 1, 1), d = c.getDay(); return 0 == d && (d = 7), d }(); for (this._picker.find(".picker__header>.picker__title").html(a + " 年 " + b + " 月"), g = [], h = 2 - f, i = Math.ceil((f - 1 + d) / 7), j = 0; i > j; j++) { for (g.push("<tr>"), k = 1; 8 > k; k++, h++) 0 >= h || h > d ? g.push("<td>&nbsp;</td>") : (g.push('<td><div class="picker__day picker__day--infocus'), this.option.minDate && new Date(a, b - 1, h).getTime() < new Date(this.option.minDate.getFullYear(), this.option.minDate.getMonth(), this.option.minDate.getDate()).getTime() ? g.push(" picker__day--disabled") : this.option.maxDate && new Date(a, b - 1, h).getTime() > new Date(this.option.maxDate.getFullYear(), this.option.maxDate.getMonth(), this.option.maxDate.getDate()).getTime() ? g.push(" picker__day--disabled") : (new Date(a, b - 1, h).getTime() == new Date(e.getFullYear(), e.getMonth(), e.getDate()).getTime() && g.push(" picker__day--today"), h == c && g.push(" picker__day--highlighted"), this._selectedDate && new Date(a, b - 1, h).getTime() == new Date(this._selectedDate.getFullYear(), this._selectedDate.getMonth(), this._selectedDate.getDate()).getTime() && g.push(" picker__day--selected")), g.push('">'), g.push(h), g.push("</div></td>")); g.push("</tr>") } this._picker.find("tbody")[0].innerHTML = g.join(""), l = this, this._picker.find(".picker__day").unbind().on("touchstart", function () { $(this).addClass("hover") }).on("touchend", function () { $(this).removeClass("hover") }).not(".picker__day--disabled").click(function () { var c = parseInt($(this).text(), 10); l.hide(), l._fillDate(new Date(a, b - 1, c)), "function" == typeof l.option.onSelect && l.option.onSelect(new Date(a, b - 1, c)) }) }, _fillDate: function (a) { a ? this._target.text(a.getFullYear() + ("00" + (a.getMonth() + 1)).slice(-2) + ("00" + a.getDate()).slice(-2)).css("color", "#fff") : this._target.text("yyyymmdd").css("color", "#ccc"), this._target.removeClass("outline") } }; "string" == typeof a && "option" == a ? $.each(g_DatePickers, function (a, d) { d.id == c.attr("id") && (d.value.option[b[1]] = b[2]) }) : (d.init(), c.click(function () { d._selectedDate = $.trim(c.text()).length > 0 ? formatteDate($.trim(c.text())) : null, d._date = d._selectedDate ? new Date(d._selectedDate.getFullYear(), d._selectedDate.getMonth(), d._selectedDate.getDate()) : new Date, d._renderDays(), d.show(), c.addClass("outline") }), g_DatePickers.push({ id: c.attr("id"), value: d })) }) }, $.fn.datepicker.defaults = {};